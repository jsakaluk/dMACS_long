library(lavaan)
library(tidyverse)
#####(a) Pop. Measurement Model ####
#Altered version of little's pos aff eg (glad 1/2 loading variability)
pos.cfa.pop = '
#loadings
PA1 =~ .200*Glad1 + .697*Cheer1 + .647*Happy1
PA2 =~ .610*Glad2 + .693*Cheer2 + .656*Happy2
#intercepts/means
Glad1 ~ 3.069*1
Glad2 ~ 3.026*1
Cheer1 ~ 2.926*1
Cheer2 ~ 2.857*1
Happy1 ~ 3.1101
Happy2 ~ 3.0931
PA1 ~ 0
PA2 ~ 0
#residual covariances
Glad1 ~~ 0.031*Glad2
Cheer1 ~~ 0.018*Cheer2
Happy1 ~~ -0.011*Happy2
PA1 ~~ 0.553*PA2
'
#####(b) Samp Measurement Model ####
pos.cfa.samp = '
#loadings
PA1 =~ Glad1 + Cheer1 + Happy1
PA2 =~ Glad2 + Cheer2 + Happy2
#intercepts/means
Glad1 ~ 1
Glad2 ~ 1
Cheer1 ~ 1
Cheer2 ~ 1
Happy1 ~ 1
Happy2 ~ 1
PA1 ~ 0
PA2 ~ 0
#residual covariances
Glad1 ~~ Glad2
Cheer1 ~~ Cheer2
Happy1 ~~ Happy2
PA1 ~~ PA2
'
#####(c) Generate data and fit model ####
set.seed(705)
dat <- simulateData(pos.cfa.pop, sample.nobs = 823)
fit.cfa <- cfa(pos.cfa.samp, data = dat,  std.lv = T)
# nitems ------------------------------------------------------------------
nitems <- lavaan::lavInspect(fit.cfa, what = "rsquare") %>%
names(.) %>%
length(.)/2
# Scale min and max -------------------------------------------------------
cfa_minmax <- function(fit.cfa) {
dt <- lavaan::inspect(fit.cfa, what = "data")
latentMin <- min(dt[[1]]) - 1
latentMax <- max(dt[[1]]) + 1
out <-cbind(as.numeric(latentMin),as.numeric(latentMax))
return(out)
}
dt <- lavaan::inspect(fit.cfa, what = "data")
latentMin <- min(dt[[1]]) - 1
latentMax <- max(dt[[1]]) + 1
out <-cbind(as.numeric(latentMin),as.numeric(latentMax))
reference_load <- lavaan::inspect(fit.cfa, what = "est") %>%
.$lambda %>%
.[,1]  %>%
.[.!=0]
focal_load <- lavaan::inspect(fit.cfa, what = "est") %>%
.$lambda %>%
.[,2] %>%
.[.!=0]
reference_intrcp <- lavaan::inspect(fit.cfa, what = "est") %>%
.$nu%>%
.[1:nitems]
focal_intrcp <- lavaan::inspect(fit.cfa, what = "est") %>%
.$nu%>%
.[(nitems+1):(nitems*2)]
cfa.se <- lavaan::lavInspect(fit.cfa, what = "se")
cfa.n <- lavaan::lavInspect(fit.cfa, what = "nobs")
l <- list()
test <- lavaan::lavInspect(fit.cfa, what = "rsquare") %>%
names(.) %>%
length(.)/2
for (i in 1:test){
grp1 <- cfa.se$nu[1:test] * sqrt(cfa.n)
grp2 <- cfa.se$nu[(test+1):(test*2)] * sqrt(cfa.n)
numerator <- ((cfa.n - 1) * grp1 + (cfa.n - 1) * grp2)
denominator <- (cfa.n - 1) + (cfa.n - 1)
pooled.sd <- numerator / denominator
l<-cbind(paste("item", i),pooled.sd)
}
#result <- matrix(unlist(l), nrow = nitems, byrow = TRUE)
return(l)
grp1 <- cfa.se$nu[1:test] * sqrt(cfa.n)
grp2 <- cfa.se$nu[(test+1):(test*2)] * sqrt(cfa.n)
numerator <- ((cfa.n - 1) * grp1 + (cfa.n - 1) * grp2)
denominator <- (cfa.n - 1) + (cfa.n - 1)
pooled.sd <- numerator / denominator
l<-cbind(paste("item", i),pooled.sd)
View(l)
# latent variance ---------------------------------------------------------
fcl_lt_vrnc <- lavaan::inspect(fit.cfa, what = "est") %>%
.$psi%>%
.[2,2]
